<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0323.1706                               -->
<workbook original-version='18.1' source-build='2019.4.5 (20194.20.0323.1706)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data' inline='true' name='federated.0ntweom0mkorsr1h365z01gpx78a' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.0vaqzk40tlx16w1cxqwl108th7ed'>
            <connection class='textscan' directory='C:/Users/kaart/Downloads' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0vaqzk40tlx16w1cxqwl108th7ed' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Airport' ordinal='0' />
            <column datatype='integer' name='Air Time' ordinal='1' />
            <column datatype='integer' name='Arrival delay' ordinal='2' />
            <column datatype='integer' name='Cancelled' ordinal='3' />
            <column datatype='string' name='Carrier' ordinal='4' />
            <column datatype='integer' name='Carrier Delay' ordinal='5' />
            <column datatype='string' name='City' ordinal='6' />
            <column datatype='string' name='Country' ordinal='7' />
            <column datatype='string' name='Route identifier' ordinal='8' />
            <column datatype='integer' name='Route Order' ordinal='9' />
            <column datatype='string' name='Route Location' ordinal='10' />
            <column datatype='string' name='image' ordinal='11' />
            <column datatype='string' name='Dest' ordinal='12' />
            <column datatype='string' name='Dest State Nm' ordinal='13' />
            <column datatype='integer' name='Distance' ordinal='14' />
            <column datatype='integer' name='Diverted' ordinal='15' />
            <column datatype='integer' name='Day of week' ordinal='16' />
            <column datatype='integer' name='Departure delay' ordinal='17' />
            <column datatype='string' name='Iata Code' ordinal='18' />
            <column datatype='integer' name='Late Aircraft Delay' ordinal='19' />
            <column datatype='real' name='Latitude' ordinal='20' />
            <column datatype='real' name='Longitude' ordinal='21' />
            <column datatype='integer' name='Month' ordinal='22' />
            <column datatype='integer' name='Nas Delay' ordinal='23' />
            <column datatype='integer' name='Number of Records' ordinal='24' />
            <column datatype='string' name='Origin' ordinal='25' />
            <column datatype='string' name='Origin State Nm' ordinal='26' />
            <column datatype='integer' name='Security Delay' ordinal='27' />
            <column datatype='string' name='State' ordinal='28' />
            <column datatype='string' name='Table Name' ordinal='29' />
            <column datatype='integer' name='Weather Delay' ordinal='30' />
            <column datatype='integer' name='Year' ordinal='31' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airport]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Airport</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Air Time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Air Time]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Air Time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arrival delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Arrival delay]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Arrival delay</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cancelled</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cancelled]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Cancelled</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Carrier]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Carrier</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carrier Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Carrier Delay]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Carrier Delay</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Route identifier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Route identifier]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Route identifier</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Route Order</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Route Order]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Route Order</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Route Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Route Location]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Route Location</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>image</remote-name>
            <remote-type>129</remote-type>
            <local-name>[image]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>image</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dest</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Dest]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Dest</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dest State Nm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Dest State Nm]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Dest State Nm</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Distance]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Distance</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diverted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Diverted]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Diverted</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day of week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Day of week]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Day of week</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Departure delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Departure delay]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Departure delay</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Iata Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Iata Code]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Iata Code</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Late Aircraft Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Late Aircraft Delay]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Late Aircraft Delay</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nas Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Nas Delay]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Nas Delay</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Origin]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Origin</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin State Nm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Origin State Nm]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Origin State Nm</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Security Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Security Delay]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Security Delay</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weather Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Weather Delay]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Weather Delay</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Air Time]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Arrival delay]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cancelled]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Carrier Delay]' role='measure' type='quantitative' />
      <column caption='Carrier1' datatype='string' name='[Carrier]' role='dimension' type='nominal' />
      <column aggregation='None' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Departure delay]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Dest State Nm1' datatype='string' name='[Dest State Nm]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Dest1' datatype='string' name='[Dest]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Late Aircraft Delay]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column aggregation='None' datatype='string' name='[Origin State Nm]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Security Delay]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Weather Delay]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Image' datatype='string' name='[image]' role='dimension' type='nominal' />
      <column-instance column='[Arrival delay]' derivation='Avg' name='[avg:Arrival delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Carrier Delay]' derivation='Avg' name='[avg:Carrier Delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Departure delay]' derivation='Avg' name='[avg:Departure delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Late Aircraft Delay]' derivation='Avg' name='[avg:Late Aircraft Delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Security Delay]' derivation='Avg' name='[avg:Security Delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Weather Delay]' derivation='Avg' name='[avg:Weather Delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
      <column-instance column='[Dest]' derivation='None' name='[none:Dest:nk]' pivot='key' type='nominal' />
      <column-instance column='[Air Time]' derivation='Sum' name='[sum:Air Time:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Arrival delay]' derivation='Sum' name='[sum:Arrival delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cancelled]' derivation='Sum' name='[sum:Cancelled:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Carrier Delay]' derivation='Sum' name='[sum:Carrier Delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Departure delay]' derivation='Sum' name='[sum:Departure delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Late Aircraft Delay]' derivation='Sum' name='[sum:Late Aircraft Delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Security Delay]' derivation='Sum' name='[sum:Security Delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Weather Delay]' derivation='Sum' name='[sum:Weather Delay:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Carrier1)' hidden='true' name='[Action (Carrier1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Carrier]' />
        </groupfilter>
      </group>
      <group caption='Action (Carrier1,Dest1)' hidden='true' name='[Action (Carrier1,Dest1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Carrier]' />
          <groupfilter function='level-members' level='[Dest]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/doshi/Downloads/data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/27/2020 10:53:36 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='data' increment-value='%null%' refresh-type='create' rows-inserted='170035' timestamp-start='2020-08-27 22:53:36.705' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Airport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Airport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Airport</remote-alias>
              <ordinal>0</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>651</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Air Time</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Air Time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Air Time</remote-alias>
              <ordinal>1</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>904</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Arrival delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Arrival delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Arrival delay</remote-alias>
              <ordinal>2</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>884</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cancelled</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Cancelled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cancelled</remote-alias>
              <ordinal>3</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Carrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Carrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Carrier</remote-alias>
              <ordinal>4</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Carrier Delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Carrier Delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Carrier Delay</remote-alias>
              <ordinal>5</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>731</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>6</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>636</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>7</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Route identifier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Route identifier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Route identifier</remote-alias>
              <ordinal>8</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>540</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Route Order</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Route Order]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Route Order</remote-alias>
              <ordinal>9</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Route Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Route Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Route Location</remote-alias>
              <ordinal>10</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>651</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>image</remote-name>
              <remote-type>129</remote-type>
              <local-name>[image]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>image</remote-alias>
              <ordinal>11</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Dest</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Dest]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Dest</remote-alias>
              <ordinal>12</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>557</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Dest State Nm</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Dest State Nm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Dest State Nm</remote-alias>
              <ordinal>13</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>130</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Distance</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Distance]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Distance</remote-alias>
              <ordinal>14</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3682</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Diverted</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Diverted]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Diverted</remote-alias>
              <ordinal>15</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Day of week</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Day of week]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Day of week</remote-alias>
              <ordinal>16</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Departure delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Departure delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Departure delay</remote-alias>
              <ordinal>17</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1104</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Iata Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Iata Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Iata Code</remote-alias>
              <ordinal>18</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>651</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Late Aircraft Delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Late Aircraft Delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Late Aircraft Delay</remote-alias>
              <ordinal>19</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>669</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>20</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>651</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>21</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>651</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>22</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Nas Delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Nas Delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Nas Delay</remote-alias>
              <ordinal>23</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>495</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>24</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Origin</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Origin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Origin</remote-alias>
              <ordinal>25</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>540</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Origin State Nm</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Origin State Nm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Origin State Nm</remote-alias>
              <ordinal>26</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>106</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Security Delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Security Delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Security Delay</remote-alias>
              <ordinal>27</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>67</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>28</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>110</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Table Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Table Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Table Name</remote-alias>
              <ordinal>29</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Weather Delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Weather Delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Weather Delay</remote-alias>
              <ordinal>30</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>989</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>31</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.486264' measure-ordering='alphabetic' measure-percentage='0.513736' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Dest:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ROC&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Washington D.C.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JFK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Carrier:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;American Airlines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Airlines&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Southwest Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Skywest Airlines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Delta Airlines&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#466f9d'>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Carrier Delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Arrival delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Air Time:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Security Delay:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Security Delay:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Weather Delay:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Weather Delay:qk]&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Late Aircraft Delay:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Cancelled:qk]&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Carrier Delay:qk]&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Departure delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Departure delay:qk]&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Late Aircraft Delay:qk]&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Arrival delay:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.0ntweom0mkorsr1h365z01gpx78a'>
      <datasources>
        <datasource caption='data' name='federated.0ntweom0mkorsr1h365z01gpx78a' />
      </datasources>
      <datasource-dependencies datasource='federated.0ntweom0mkorsr1h365z01gpx78a'>
        <column caption='Carrier1' datatype='string' name='[Carrier]' role='dimension' type='nominal' />
        <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Carrier:nk]'>
        <groupfilter function='level-members' level='[none:Carrier:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Average Arrival &amp; Departure Delays (minutes)'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.0ntweom0mkorsr1h365z01gpx78a' />
          </datasources>
          <datasource-dependencies datasource='federated.0ntweom0mkorsr1h365z01gpx78a'>
            <column datatype='integer' name='[Arrival delay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Carrier Delay]' role='measure' type='quantitative' />
            <column caption='Carrier1' datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Departure delay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Security Delay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Weather Delay]' role='measure' type='quantitative' />
            <column-instance column='[Arrival delay]' derivation='Avg' name='[avg:Arrival delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Carrier Delay]' derivation='Avg' name='[avg:Carrier Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Departure delay]' derivation='Avg' name='[avg:Departure delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Security Delay]' derivation='Avg' name='[avg:Security Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weather Delay]' derivation='Avg' name='[avg:Weather Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ntweom0mkorsr1h365z01gpx78a].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Arrival delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Departure delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ntweom0mkorsr1h365z01gpx78a].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Arrival delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Departure delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Carrier Delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Weather Delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Security Delay:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0ntweom0mkorsr1h365z01gpx78a].[:Measure Names]</column>
            <column>[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Carrier:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ntweom0mkorsr1h365z01gpx78a].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ntweom0mkorsr1h365z01gpx78a].[Multiple Values]</rows>
        <cols>([federated.0ntweom0mkorsr1h365z01gpx78a].[none:Carrier:nk] / [federated.0ntweom0mkorsr1h365z01gpx78a].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{45B1D4B6-B8BC-44C9-8290-A2A0BE1425F4}' />
    </worksheet>
    <worksheet name='Average Delays Per Carrier'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.0ntweom0mkorsr1h365z01gpx78a' />
          </datasources>
          <datasource-dependencies datasource='federated.0ntweom0mkorsr1h365z01gpx78a'>
            <column datatype='integer' name='[Carrier Delay]' role='measure' type='quantitative' />
            <column caption='Carrier1' datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Nas Delay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Security Delay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Weather Delay]' role='measure' type='quantitative' />
            <column-instance column='[Carrier Delay]' derivation='Avg' name='[avg:Carrier Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nas Delay]' derivation='Avg' name='[avg:Nas Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Security Delay]' derivation='Avg' name='[avg:Security Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weather Delay]' derivation='Avg' name='[avg:Weather Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Carrier:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Security Delay:qk]' num-steps='6' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Security Delay:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Carrier Delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Security Delay:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Weather Delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Security Delay:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Security Delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Security Delay:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Nas Delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Security Delay:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Carrier Delay:qk] + ([federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Weather Delay:qk] + ([federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Security Delay:qk] + [federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Nas Delay:qk])))</rows>
        <cols>[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Carrier:nk]</cols>
      </table>
      <simple-id uuid='{039F2E7E-0EDD-4CBD-A455-FF2636C2D085}' />
    </worksheet>
    <worksheet name='Top 5 States By Delays (minutes)'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.0ntweom0mkorsr1h365z01gpx78a' />
          </datasources>
          <datasource-dependencies datasource='federated.0ntweom0mkorsr1h365z01gpx78a'>
            <column datatype='integer' name='[Arrival delay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Carrier Delay]' role='measure' type='quantitative' />
            <column caption='Carrier1' datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Departure delay]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Dest State Nm1' datatype='string' name='[Dest State Nm]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Arrival delay]' derivation='Avg' name='[avg:Arrival delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Carrier Delay]' derivation='Avg' name='[avg:Carrier Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Departure delay]' derivation='Avg' name='[avg:Departure delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[Dest State Nm]' derivation='None' name='[none:Dest State Nm:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ntweom0mkorsr1h365z01gpx78a].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Arrival delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Carrier Delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Departure delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Dest State Nm:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Dest State Nm:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:Dest State Nm:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:Dest State Nm:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:Dest State Nm:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:Dest State Nm:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Dest State Nm:nk]</column>
            <column>[federated.0ntweom0mkorsr1h365z01gpx78a].[:Measure Names]</column>
            <column>[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Carrier:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ntweom0mkorsr1h365z01gpx78a].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ntweom0mkorsr1h365z01gpx78a].[Multiple Values]</rows>
        <cols>([federated.0ntweom0mkorsr1h365z01gpx78a].[none:Dest State Nm:nk] / [federated.0ntweom0mkorsr1h365z01gpx78a].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{4DEEF905-1E75-446D-9070-60BF5CB6786E}' />
    </worksheet>
    <worksheet name='Total Delays Per Carrier (minutes)'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.0ntweom0mkorsr1h365z01gpx78a' />
          </datasources>
          <datasource-dependencies datasource='federated.0ntweom0mkorsr1h365z01gpx78a'>
            <column datatype='integer' name='[Air Time]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Arrival delay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cancelled]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Carrier Delay]' role='measure' type='quantitative' />
            <column caption='Carrier1' datatype='string' name='[Carrier]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Day of week]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Departure delay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Distance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Diverted]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Late Aircraft Delay]' role='measure' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Nas Delay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Route Order]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Security Delay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Weather Delay]' role='measure' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[Air Time]' derivation='Sum' name='[sum:Air Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Arrival delay]' derivation='Sum' name='[sum:Arrival delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cancelled]' derivation='Sum' name='[sum:Cancelled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Carrier Delay]' derivation='Sum' name='[sum:Carrier Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Day of week]' derivation='Sum' name='[sum:Day of week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Departure delay]' derivation='Sum' name='[sum:Departure delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Distance]' derivation='Sum' name='[sum:Distance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Diverted]' derivation='Sum' name='[sum:Diverted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Late Aircraft Delay]' derivation='Sum' name='[sum:Late Aircraft Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nas Delay]' derivation='Sum' name='[sum:Nas Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Route Order]' derivation='Sum' name='[sum:Route Order:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Security Delay]' derivation='Sum' name='[sum:Security Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weather Delay]' derivation='Sum' name='[sum:Weather Delay:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ntweom0mkorsr1h365z01gpx78a].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Air Time:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Arrival delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Departure delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Carrier Delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Nas Delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Security Delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Weather Delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ntweom0mkorsr1h365z01gpx78a].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Air Time:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Arrival delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Departure delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Cancelled:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Carrier Delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Day of week:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Distance:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Diverted:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Late Aircraft Delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Latitude:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Longitude:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Nas Delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Route Order:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Security Delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ntweom0mkorsr1h365z01gpx78a].[sum:Weather Delay:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Carrier:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;American Airlines&quot;</bucket>
              <bucket>&quot;Skywest Airlines&quot;</bucket>
              <bucket>&quot;Southwest Airlines&quot;</bucket>
              <bucket>&quot;Delta Airlines&quot;</bucket>
              <bucket>&quot;United Airlines&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0ntweom0mkorsr1h365z01gpx78a].[:Measure Names]</column>
            <column>[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Carrier:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Carrier:nk]' value='65' />
            <format attr='width' field='[federated.0ntweom0mkorsr1h365z01gpx78a].[:Measure Names]' value='123' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Carrier:nk]' value='Chose Carrier Name'>
              <formatted-text>
                <run bold='true'>Chose Carrier Name</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Carrier:nk]' />
              <text column='[federated.0ntweom0mkorsr1h365z01gpx78a].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Carrier:nk]</rows>
        <cols>[federated.0ntweom0mkorsr1h365z01gpx78a].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C29B7BC9-9564-4568-AF9B-F2DCD7FAE224}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Airline Delays: The Complete Story' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='83506' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='15664'>
              <flipboard active-id='4' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Here, we can see American and Southwest airlines have most delays.' captured-sheet='Total Delays Per Carrier (minutes)' id='1' />
                  <story-point caption='Here, Skywest and United Airlines have the highest Arrival and Departure Delays.' captured-sheet='Average Arrival &amp; Departure Delays (minutes)' id='2' />
                  <story-point caption='Out of the 50 States, these 5 have the highest number of delays.' captured-sheet='Top 5 States By Delays (minutes)' id='3' />
                  <story-point caption='Avg. Delays on all fronts with respect to the Airlines.' captured-sheet='Average Delays Per Carrier' id='4' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='8195' id='6' story-point-id='4' type='text' w='32185' x='66732' y='45228'>
          <formatted-text>
            <run fontsize='11'>United Airlines has the highest Avg. Weather Delay but also the lowest Avg. Security Delay</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{9F6C61BD-CD56-4EE8-A324-5EDC708DF2F1}' />
    </dashboard>
    <dashboard name='Delays Dashboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' preset-index='9' sizing-mode='fixed' />
      <datasources>
        <datasource caption='data' name='federated.0ntweom0mkorsr1h365z01gpx78a' />
      </datasources>
      <datasource-dependencies datasource='federated.0ntweom0mkorsr1h365z01gpx78a'>
        <column caption='Carrier1' datatype='string' name='[Carrier]' role='dimension' type='nominal' />
        <column-instance column='[Carrier]' derivation='None' name='[none:Carrier:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='48' param='horz' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='98340' id='43' param='horz' type='layout-flow' w='82678' x='787' y='830'>
              <zone h='98340' id='13' param='vert' type='layout-flow' w='82678' x='787' y='830'>
                <zone h='5187' id='14' type='title' w='82678' x='787' y='830'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='323' h='34336' id='46' is-fixed='true' name='Total Delays Per Carrier (minutes)' w='82678' x='787' y='6017'>
                  <layout-cache type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='28112' id='52' is-fixed='true' name='Average Delays Per Carrier' w='82678' x='787' y='40353'>
                  <layout-cache minheight='496' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='30705' id='51' name='Average Arrival &amp; Departure Delays (minutes)' w='82678' x='787' y='68465'>
                  <layout-cache minheight='251' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98340' id='47' is-fixed='true' param='vert' type='layout-flow' w='15748' x='83465' y='830'>
              <zone fixed-size='49' h='5913' id='53' is-fixed='true' mode='checkdropdown' name='Average Delays Per Carrier' param='[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Carrier:nk]' type='filter' w='15748' x='83465' y='830'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='57' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98340' id='56' param='vert' type='layout-flow' w='98426' x='787' y='830'>
                <zone h='5187' id='14' type='title' w='82678' x='787' y='830'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='34336' id='46' is-fixed='true' name='Total Delays Per Carrier (minutes)' w='82678' x='787' y='6017'>
                  <layout-cache type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='49' h='5913' id='53' mode='checkdropdown' name='Average Delays Per Carrier' param='[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Carrier:nk]' type='filter' w='15748' x='83465' y='830'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='28112' id='52' is-fixed='true' name='Average Delays Per Carrier' w='82678' x='787' y='40353'>
                  <layout-cache minheight='496' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='30705' id='51' is-fixed='true' name='Average Arrival &amp; Departure Delays (minutes)' w='82678' x='787' y='68465'>
                  <layout-cache minheight='251' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{733A1BB3-D47E-42C8-ADC3-64BA9D2A64A7}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Total Delays Per Carrier (minutes)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Carrier:nk]' type='color' />
            <card param='[federated.0ntweom0mkorsr1h365z01gpx78a].[:Measure Names]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ntweom0mkorsr1h365z01gpx78a].[:Measure Names]</field>
            <field>[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Carrier:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C600F42-0F44-42CF-9089-EE5EC1820811}' />
    </window>
    <window class='worksheet' name='Average Arrival &amp; Departure Delays (minutes)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ntweom0mkorsr1h365z01gpx78a].[:Measure Names]</field>
            <field>[federated.0ntweom0mkorsr1h365z01gpx78a].[Multiple Values]</field>
            <field>[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Carrier:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A473E64D-CA61-49D6-96AB-39DBE2437259}' />
    </window>
    <window class='worksheet' name='Top 5 States By Delays (minutes)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ntweom0mkorsr1h365z01gpx78a].[:Measure Names]</field>
            <field>[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Dest State Nm:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D87CC0B5-2B2F-4927-B217-95653E58F328}' />
    </window>
    <window class='worksheet' name='Average Delays Per Carrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Carrier:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Security Delay:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ntweom0mkorsr1h365z01gpx78a].[avg:Security Delay:qk]</field>
            <field>[federated.0ntweom0mkorsr1h365z01gpx78a].[none:Carrier:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF9536F2-7966-4220-B0B2-4F7421DB4F91}' />
    </window>
    <window class='dashboard' name='Delays Dashboard'>
      <viewpoints>
        <viewpoint name='Average Arrival &amp; Departure Delays (minutes)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Average Delays Per Carrier'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Delays Per Carrier (minutes)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='52' />
      <simple-id uuid='{E7957CF4-032F-44CC-AACF-CC7B609A0F34}' />
    </window>
    <window class='dashboard' maximized='true' name='Airline Delays: The Complete Story'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{805B6E16-5682-48D5-A241-5337F3A3ADAD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Airline Delays: The Complete Story' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2deWBU133vP7PvoxlpRvsuIQRiNRhsDAbHcbwmzubEjps0bmuS2E1f19f2
      9b3XvPfapk3SNluT1GnTxElrO47d2KbewWDABowECAQSWkfSaPbR7Pu99/0hjDc8IKMN6X7+
      0szce87vXt3vPb9zzu/8jkKSJAkZmSWKcr4NkJGZT2QByCxpZAHILGkuKoCQd5zJePpd34qM
      jIwCMDAwMAtmFRgZGZ+FcmFidIzCrJRcnGjIe4H7KDPfvEcAJ/b+J3ff91Wiuam+ccjnZjKe
      eddROR7++aMADAwOTqvC3b96iP/51//AD/7p+3z7n35CTrzQUQl+/vCT0yr3QkwMneahhx7i
      3nvv5aGHHuLlg53sevQxEpdyslTgpz/8Nv/0gx/xg+//K6nLtOXUoZfoOuu94G/f+NY3ip4r
      ZKL84zf+jn/+54f47rf/gWBq6j52Dkcu0yoZ9bu/OHhsmD/97VvYe+gUd16/mkTEj8a2jL6u
      fQQFG6eOHuQz9/3W+eP9vql/6n88/GM0WiNjbg93fPaLNJdpefjnvyCVFbjh9k/T0Vx1/pxb
      P/E5rltZybE9T/DkS0f49PXt7zrWcP7YX/3iXwglC2gsldz3mY/wk1/8mt/+4ueYHD3NgaE0
      1coAh3pGUKjN7Lz/N3j8x3/Pjnv+iCozVDevZOfOlXh9Xnbu3AnAQwdf5Nknf0nINcammz7J
      5o46Hv/FwwRjKVZuvoHtGzsAOLHvGYytW/niTRvfujcvP82JgQn0lnJ+83Of5NlHf0FMqcQ7
      6qZ5eTuTvjFKalfzqVs3871v/iMlTifhpMCXvvQ758sopGPvuNbE2Al6TvXw0EMPccddX8DV
      9TLH+8cpKW/gc5+8FYDgcA+6+rV86e5bpspIBHjpQCf6wQwTGzZw63Wr+OnP/p1sQWDTDbdz
      dUc5jz2yB5M6SmltE4PjcT5/160MHHuVgLqea1c3XvaDs1h4RwsgZiOkVVbWbd7G6cP7AJgM
      eIglcyQmA+w+0MV9O7+CXf/WOa4RFwBjbh933nUPX/zEdvYePsFL//kYm++4lwcf2MmuJx67
      YOVr16+n/+zZosfeduen2XT1Jnyn9jORNVIIDTERy/HK7j20r2zn5X2v8dFP3MWXf+selMA9
      9089/MUu+cbbP8nv7rybfXsO0nf4JfRNm/nKgw9yZPcu3myQes/0snbd2vNn5SZdvHo6zANf
      /jIr7Gl2Hx3AMzbBzZ+6m3tuvYYoJfzW/Q9w+ug+QCQpaPnCF3+LHStKef5A9/ly3n2tm7ff
      QseqDnbu3EmlNsrrZyf5ype/jCk+wBlvEoCK9k3Yk0P87Te+yd7DJ1Cbndy0dQMf/cwX+OiH
      r+OZRx5m8+338OCDD/D8E/+BSIFXX3yeVdvuYMu1W3GfOURagN37DrOirb7YzVlyvKMFOPn6
      K/hCQX78b48yfPY0sdw7pwiuu34HWpXiggWpNFq0KiVKhRIk8Pu99Dz5KAe1Cupb2y94jtfj
      wVlejt9z+ILHCqkgX//Wj7jj9pvRaRXk8vDxj36Ep5/bQyIi8MlyE1/68pd44YVnON0/xu//
      2f/AblBd5JJV6HRqFJIKJRL+gJ9Dx3vwnD5IibMekam3grPciWfCw3Ln1AOTnAxQUj7VitVU
      13DQGwSUqNVKCkolqnPVvjmtolZPfVHmcHDCFaP83Kum2H3JRAOcPHmchx5KAzrWq87df4Wa
      e377ASRR4Kff/RtsFXXvOM8fiLOtyg4KMOo0FICmFetorLQDcNv29by473VSKjs2nTzu8Xbe
      cTf2HenlL//Xn7Fz504evPfD7D3c84EL3nL9VgqCkvXr1mI26N7xW3/vSV57dQ8P/XI3n759
      x/seKxVySCodhUycwGQcgIq2q/F3/SeVyzcB8Pprr9PQ1oFVK5DIChx8+Rkm391lKcLaq7eg
      FAqsW7+eErv5/Bth2y2fYM/jP2bfwUM8+9Sz6BtWEel7nYOvH+Y/nnmFrVevKVqub3yEI0cO
      87MnXuKGLRuK3hcxFeP1w4fJWhppLdOxvGMNdVUOVOdUFRw5zcOPPcnRzk78CRFniZHaunoO
      7H6BnrNDfOimLTz845/x6u7nkEzlaN9ly5qtt7DnZ3/Pum03XfqNWSpIb2N4ePj830I2Ibnc
      Pinsd0uRRFaKhf1SOJZ681dpeNj1jnNGR6c+51Mxye0PS5IkSUHPmNR57ISUzOTOlxv2u6Wj
      R49KJ06dkfIF8fz37zw2Lw0Pj0mSJEk+94jUO+iS/G6XlMpPHfuT7/29FEwVJEmSpGw6Lh3r
      7JQ8wYgkSZLkGuw9f9yFrsvtGpXyUxcojY55JEmSpPhkUOrs7JTCseQ7zivkMlL38S5pZNw7
      9Tmbko4f65LC0eQ7ysomIufrn6orLf3N//u6dKyr6/w9iwQ95/9+931JxSelrq5jUjonSIVs
      WjpxrFManfC/wxb/xKjU2dklRZOZc9+I0tDZ09LwuWsIeMak7p5eSRAlSZLy0qjL/Y7zv/2t
      b0pZUZJ5FwpJurJCIfY+9wQxdSUfu+m6+TalCDkee+wZPvvZT823IQA8/ehPsDRt4obNq+bb
      lAXHFScAGZmZRO4RySxpZAHILGlkAcgsad4zE3wlk81myWaz823Ge9DpdLJd0yQej89JPYtK
      AKIoUijMR6hbcTQajWzXNEmn5yZwUHaBZJY0i1YAmUwGEMlkFlYTf6l2SZKAe3ycXD5HNi/M
      ul1CPot7wsfFBsWDfj9vWiPksxTeE80rMjE2ymQsQSI6SSJ1ufe/gNcbKHrEya7D+CffcpnS
      sfglh7yrvva1r33tgxu3sCgUCueb9AmPh5ISE56JIMnYJAWFikjAgygq8Hm9GMxW1EoF0WgU
      IZckU1CSScbw+32odCYUQoaxcR8qlYTHGwAE/F4vGlMJuWQUT2ASnVLC7fGj06pwuz2YLCWo
      lO+NlXq7q3GpdnnHXBjsTjRigmAkRyEdR9ToSU36yKFhMhRBFAtEwgHSeZFY2E++INBzqgdb
      mRON+mIxUe+0a2TERVVlKW5vAIWkIJtNcvpUDyarHaWQZXTcjUIpMTTspqqijK6uY+gUIu5w
      DI1aTdjvpaBQoSPFwHiMmmonAX+IdDKOzWab9v/yTRfIN3iGE2NBbBoFarMR//gYPad7yaPC
      XmKZuqfeccJuL1qTlpMn+ygEJlGUmTnZ1QV5EcloZdI7wqmeXqxlFRQSITqPdWMxahZxC5CK
      Mzo6Ri4ZwhvLkU6nyQkQjQRRKCVSyak3kzKXZDySJeDqIxCMkENJOp3EFwzT0FhHNp0mHQ7g
      T+SoryklGs0gSiJSIc+4xwNClqHRCZQIJNO5GbOrsq6RbDRIcDLK4OAw1rIyQmMDZBQG3P19
      JPMZEokIXk+IdDqDJEFBVFBRUYFRr5n2/VKp1Wi1BhCyxKIJYrEEjopyrGYD3uAkjU31xGNx
      KsrLUak0VJSXY9LrqKqtJ+kfOn8tCq2N9atbcI+OoFJrUKkvr5vZNzJKZmIQQatk3wu7GRsP
      sWLTNYSDE287SkGJ0UR3dw9SLkokJRCNRoEC7kCE3td3kxA0KFVqUskUAyNjXHvNanoPv754
      WwC1RktFRTkqrRGVkMFosWIxGSixmIglMmiUAqLagMViIp/JoTUYqa12EovGsdps2Ex6xt1+
      dHotoqSgxF6KUacFpRolBdLZPE6HnUxOoNLpIJXJYbPbUKve+055+5v2Uu0S0jFiyQz20jIq
      qyrJpDMkUmnqaqspSBJ2kxa9pQK1IofOYAYhh1pnQCHlUGoM024BVIh4fD4qahpIxUMoNUaM
      WiUFVNhNOkbHPZRX1aBWKdHrdeTSSVDp0BuMaLQGFIWpa9EqRMbdE5SUlqMQMqh0JkxGw0Us
      eS9vtgAavZmrN60nHhdQqSVWLa/jjTc6yYsaLCYDBoOB4f4zGJy1tFQ7iKTy1NXWYjRqiMZS
      VFTVEo5EWNPehNcfoMxZRbnNQOfxXlasXb24QiHS6fScjR5MB4PBcPl2iQUi8Qy2kqKLHabF
      jNg1S4TD4Qt+Lwk5TnT3sGL1WnTqS3BgCmnGQylqK8ou+LMsgDlgoT5oC9UueH8BzDSL1gXK
      xoKcHPRQYTfhC4TI5bIIkop0IkIBFVIhSzIeJYeOeNiPUqPG5wtgMmoJBsOoNDpUSgnPhAeD
      yUwkFKCACiGbpH94DKejjP6+M6SyAkadklAk8b5N/dtdjURskng6jwqBYCiCyaTHMzFMPKki
      OxmAkhI8Y6No1UomY0nyuSxRvxt/UkCnKJDMFFBKBU719lNZ7kTMxjh6cpCacguRRI58Jolr
      wotJDTlJwWR46lou5poN9fcRTWUJB7zkRAX5dJy8qGR4oBeVzkQyGkalMxD2e1HrjKhVStKJ
      EL19bgpChmQyg9mkx+sNYDLqmPAGMJsMeL0BzBYz3vFRwpEoeqOZgN9HKpnEYDJzgTED4C0X
      6OlHfoo3IaBSKVFJWVwTYfRaBYP9g0hJD88fG6XSCN5IGrtFRzyRJxaLIIkivqCfN/a/itKo
      5+SRE+hK7JiNOkLeMTICDA6PLV4BjLhcZJMJSsxqMiozsXAMsZBgYtxPOpcnGpnEYdHgD8VQ
      W0pRZBPEo36i0RQKk4N0NIRBoyA4GSOWiJPLQSGfJplKYzTosVgsSEKeeCpLOpXEoMiS19nQ
      XcD1fvuDFgoGcHt8SEIBnQj+RIzKcgfplIRKzKIpKSEVi5JMpJAkkUw2g1mjwuisZnSgj3gy
      TSGfx2wyYrFYGB1xkcsmMdusRBJZwsFJDHoN6kKWrJAjpyohHQ1htVqK2oUkEIun0Oj11FZV
      EvB78QXDWMxWygwSg54Y+WycZDyN3mhGr9Og0UIuq0YSspjUEiO+EEIuQSSSpiAWiEUmyWYT
      FBRGrEYtyUQUUWFEzCWxW3UEE2AxXrjD/qYAUimJ9go14wUTgdFh9LkEZwMhlpfr8KbU6B0N
      JHyDiAoN5Y5STh8/QHd/ABU5YvEoJl0JK1Y24vMnyGeilFdUcOjwERJBH2Hf+OKaCX47VlsZ
      LU3mqTeSU4/aakKtAqs1i9luR4WISiNhsZmIhnwIei0anQGlQovZaKBAmnyugEqjRadVodeY
      QFEgEY2QKkx5jflCAaVCgUGnZjKRobIkRQ4lokKDXnPhTqhQENAbDJjMVnSAqBDwePwYTRXY
      7DZGBocxmszoTUokFAiFAnqDmgm/nxKrFaXOjKKQJpJIUQ0YrDYaWprwe73otVbMTgd5IYta
      BahVaHRT15JKTeW1MBqNF7Qrny+gUiqwGnR4g2GEgoDBYECrhkReiVGrxG4rJa6Ikk1HiUhg
      s2rJpCawOUvRqyVsKj2ZZBK7rYRoOIDGVEI2ncZq0pFPZZBQotdryCtM6PU6dHmRVCYPYv59
      7TJbzKj1GhrLKgmmPUwE09Q2VmOx6jAqVIz3D7C8xo53MgkoyWQUXL26noSoRZtPocimcbmD
      VFaWg2JqhK21dRmKQgYxZJb7AHPBQvW1P6hd+VwOlUb7vu7LTDBXfYBF2wLIzB4a7btXHV+5
      LNqJMBmZS0EWgMySRhaAzJJmUfUBlEol6suMPZkNZLumj8Ew/fCJD8KiGgWSkZkusgsks6SR
      BSCzpJEFILOkkQUgs6SRBSCzpJEFILOkWZiDwDJFeWHXr6lsXkm1XU8sp8Jm1lMo5EHIc/jk
      BLdu7+Csy0e1w0ZGKJDyneXYmJJP37aQM2rPD7IArjhyFJQm1q5s40TnYQ6d6KXapmflhqvZ
      8/xeSsoaeeHZZ1Eq4FhWyZoNG1izbBnHR6e3meFSQRbAFYcWR4mWEz19JOJxqquqcNottDTU
      4l+7DoWkwao3ESuosKRztC9rYuDk66RiIXIiaGWn9x28ZyZ4rnIyysgsBGYlFEIQBOLxOGbz
      zGUwkJGZDS7bBYqFA0x4xlCqrCRyGUqsdloaa1CpVAs20GqxcOrUKQKBAC0tLfT29nJt+wqS
      k5N0+7ysW7eOnp4eKisrWbFixXybumC57CfUbLGQHsqjVmZZvn4VvqGhmbBr3ojH4xw5coSy
      sjJGR0dpaWmho6ODI0eOkE6nqaur4+zZs1x99dWUlV0418xsIgkC2WCYrMeLY2yck68dJBL4
      JfFEnFORGAlRgN9/kImJCTZs2EBXV5csgCJctgAikQgGswWrpYTBk6coq6ieCbvmDYvFgsPh
      QK/Xo9FoCASmErNqNBq8Xi9OpxOlUsnk5OSsCSATjRP3+kl5A6Q8PjJeP1mvD0Umg0alxFBq
      w1RVwTGvmx2f/ARv9PWyY9tWAoEAYs9pah59gv7WJnybNvKRm2+eFRsXC5ctgFJnJaXOSgCq
      a2ou26D5ZmhoiM7OTnbs2IFOpyMajeL3+9FoNGQyGURxKh3yVO7JD0Y2nSUaCBP2+Il6g8R9
      QZK+APlYHDUSJosJe3U51goHtpYGzFs2Yqx0onrXWtzw8eP0x2J86ON30tPTw7p164g1NNC/
      rJVrhkY48PVv0R1PsvauhbFb5UJk1tYDxONxLJb35qJZCgiCQDAYJegPE/CFCXmDRPwhYsEI
      akSMei0Opx1HRRml5aXYKx3YKp3ozRdODfJBKQSDTH7vhygNBmwP7ERltc5o+YuBogLIxgL0
      jE6yvqMNxTRTYCx2ATx7sIcqhxV/MIrXN4k/MEk4GEHK59EqFVQ6rFQ4bVQ47VRUlOJw2ikp
      taJUzv1AfPrQEaI/+3dMt92M5aO3zXn9C5niLYAkcWjPLo6c9bF9xw7Wrmi95IIXiwBEUcIX
      jnF62MuZYR99Lh+pbJ5R3yQ3bVxGa00ZteU2qpw2Kp22S8rKPB9I2RzR/3iMTOcxSn//d9G2
      Ns+3SQuCi7QAPh57eg+NLW1sWLMck+nSx/WvRAGIosSQO8igO8jpYS9nR/3k8gKVZVaWN5TT
      3lDBsnondsvMuipzSd49weR3f4CmrpaS+z6P0mSab5PmlaICSLpP8sQbflqrLGzZvGlaBS90
      AeQLAsMTIc6M+Dg95GHQHSRfEKmvsLOqpYrlDeUsb6jAoJv+ZhNXAql9+4n+4hGsn7sb0w3X
      z7c580ZxF0gsEI1E8ISTtLc2TKvghSSAdDZPn8vHmREfvSNeRjyTaNRKWmudtDdUsLK5kuYa
      xwUzKC9mxEyG6L/8lPzoGPYHv4SmoX6+TZpzigrg5f96kvFADFtFPR+/9UPTKni+BBBNpDkz
      MuWrD4wFGQ9E0GvVtDdU0N5YQWutk4aq0iX3sBcjN+xi8jvfR7d6FSW/cQ8K3eJJfXgxigog
      HejnJ891c83KBjZs3DitgudCAOFokp5hL2dGpjqosWQGo15De2Ml7Q3ltDdWUuMsmVUbFguS
      KJJ88WXiTz6N7be+gOGa6bm8VypFBSAVUjzyyBPUt61i6+b10yr4YgI4ceIE3d3dtLa24vf7
      2bhxI06nk127drFu3Tq6uroAuP2jd5JMZ8nmBU4Peehz+Tkz4iUcS1FbbmN5Qzkrm6pY0VRx
      RXdOFwpiPMHkDx9CjCew/7cHUDsc823SrFJUAM898wRllXUEwkluv/mGCx7jdbvwBmJUV5Xi
      94Wob+vAqlddVACjo6OMjo6iUCjYuHEj3d3dVFZWsn//fux2OwDj4+NkS5bzq1eOc92aZjqa
      K1nRWEFzjYMS89xkDluqZE/3MvlPP8KwdQvWuz6FYoEO714uRUMhQn4P6byCyVT+fY9xOp0E
      JlPEEllWrW5haCiAqdGJIAhv7T5yATo7OyktLcXhcPDCCy9wzTXXoFAoMJlM2O12lEolFouF
      dVdt5FMfWoPT9s4h2GJly1w+qrZWHN/+JvEnn8L31T/E+uXfRtuxcr7NmnEuOxTi8MFXsTlq
      MOggFovirF9JhU2/oEaBZC6PQjBI5AcPgUKJ/atfQWVbPP2qogLIx/2cHE1wVcf0Zw1lASw+
      Mp3HiPzLTzHdchPmj96GYh7COmYCsVBg+Oe7sHW0FneBJFT0dB3E6x3nthuX7mSJzBT6Deup
      WNVB7PEn8H31D6dCKpZdenjMfFBIZYidHiByrJfomSHifS4khQIUChRKZXEBCJkwMcnIyhJ5
      dEVmCoVOS8lv3IPpxhsIf/v7qKsqsd1/34IIqciFI8RP9RM90Uusd4jUmA+VQY+loxVzWxMt
      O+/C3FqH8txKRUmSLjIMKmR5/rkXsZTXsnXTzA6DyiwOUgdeI/rwf2C96xOYbrpxTuqURJGs
      J0D8ZC+JngHifUPkQhHU9hIsK5dhWt6MdU0bxrqqi5ZVVAAnjuyjfyyIocTJ7R+engskC2Dp
      IGYyRP/t5+RHXNi+fD/apumFzRRDKgikh1wkT58l2TtIsm8YIZtDW1WOaXkLppXLMK9sRVtq
      +0DlF48GnRxj18GzbLqqg7rqymkVLAtg6ZEbdjH5/R+ibVuG7Yufn3ZIhZjOkO4fInWqj/Tg
      COkhF5IE+pZG9M0NmDraMC5vQWXQz5jNRQWQiUzwxpkJHI5SViyb3kiQLIClS+KFl4k/8WtK
      fvNejNdde8FjCpEo2b4B0qf7yI6Mkh3zoNDr0LW1omusx7i6HX1D3axPwBVvASJufvDwU6xa
      u56btl/4Qt4PWQBLGzGZJPLP/0ohGMK4fRsKnY5s/wC5IRf58CRKixVdWwva1mb07W1op+lh
      zBRFR4E0BjN1VeVTiVdlZKaB0mSi9A9/j9SrBwh94x+x3nMX+nVrKLnrkwtqIq2oALIRL0qj
      nUQyOVf2yCwyjNdvxbB1y4KdNCtq1aRg4ZO3f4hr1q+aK3tkrnCSySSvvfYa8Xic3bt3MzIy
      gkKpJJ/Pc+DAAXp6eti1a9eCyUFbVADdx4/i8Xg4ebpvruyRucIRBIFsNovFYkGr1RIKhQB4
      /fXXyWQydHR0YLFYFkze2KIC2HH99Xg8Pq7fvv19jwl4xznR04t7ZJBT3V34IpkZN1LmysFq
      taJQKEgkEqxbt46JiQlEUSQajdLT00M0GsVoNKKYbp6dWeKSokHHx8epra1939/P9p9FrVTT
      3FzB0FCchkannB16iTI2NsbQ0BCtra0MDw+zbt060uk0TqeTSCRyPsz9ihCAkM8wPuEjGo2y
      fOUqdOr3Nhhet4vh0QmaGuoJBi99QYyMzEKg+Jpg7xn29KXIhUawOSq54fpL32NKFoDMlUDR
      PoDWXoc2E6SiroUVy1rmyiYZmTmjqAAkSUKtUeJyuaismp+ZOhmZ2aSoAIRCjlxBwXVbphcG
      ISNzpVBUAMeOHSPhH6LzjGuu7JGRmVOKhkIolSo0GjWoFmdKDBmZS5oHyOfzaDTTSxIrjwLJ
      XAlcUoTSdB9+GZkrhYUZoicjM0fMmADCPjenuruJZYSZKlJGZtaZMQFEzqVGDLoDM1WkjMys
      M2MC0KkkTp3sw1T2wVbny8jMB/I2qTJLmvfMA8zUSp1UKjUj5cjIzCbvEcBMvrXlFkBmoTNv
      w6CSJLF3714Acrkcu3fvJhwO88ILLzA4OMiRI0c4cuTIfJkns4iRRJGjX/1bXI8+P38COHr0
      6Hl3a//+/UiSRDweJxQKIQgCbrcbt9vNvq4BvvvYPsb9kfkyVWaRIBYKjD72PHtv/QoKpQLR
      YigeCzSbhMNhBgcHSSaTGI1GmpubOXbsGLfddhsHDx5E/bYMvuFYkh/8aj/uQBSDTs3yhgpa
      ax0sb6hYktubykyPQirD6L/vYuzJl6m+YztbH/8HNNapbNYX2Sk+wP6jPbR3rKa2omxalV7K
      KFAkEqFQKFBaWkpXVxdr166lu7ubZcuWnc8m0NTU9E6bcgXOjvnpHfbRO+pjZCKMQgENVaW0
      1ZWzvKGctvpyjPqls9WnzIURUhlG/u1Jxp98mbq7b6Ph8x9Fpde945iiAiikY+zZd4B4MkNV
      QwtbNq695MrnchhUFCWGJ0L0uXycHvbi8oRJpHNUlFlY2VRJU3UZq1qqZnQXyXg8zpEjR1Aq
      ldxwww388pe/BKChoYFUKkVtbS3Dw8Ns3LiR0tLSGatX5uIUkilG/+0/mXjmFWrvuYO6u299
      z4P/JsUXxedSHHztEOhKuP7aDdMyYiHMA/hCMc6M+OgZ9jLkDhKOprCYdCxvqKCtzsmKpkpq
      yz/4xN3u3bsxm81s3ryZxx9/HJhy2XQ6HeFwmMbGRoxGI5s3b56pS5IpQi4cwfXjXxI+3E3d
      Fz5O5R07zm+G8X4U/TUTGGQkItFadWnxPYNnz9LY1sZCWT1QUWaloszKjg3Lzn8XS2boHfFx
      ZsTL/hODjHkj6LQqWmudtNQ6WdE0tZv8xfoV4XAYhUKBWq3G7/djOrdDSk1NDW63m61bt9Lf
      3180nYzMzJDx+HH96BHiPf3U77yb1j/5nUtOxVi0Beg5fhhfIEIwreQzH7upaEGJST/dp11s
      vO5qVIJwReUFyuUFzo766R/z0+vyM+QOoVIqqSkvob2xkuX15Syrc2DQyWHhC4m8L8jYjx4h
      dmaA2vs/i+PGLdMuo6gAJsZchCIxzFY7TQ3F32SjwwOMDI3StuFqKm2WBeECXQ6iKOHyhulz
      +eh1+RkcC5BI53DYTCxvKCebF7jz+tWX5ULJfDDSI+OM//hRMhM+au+/G/uW6bnnb6d4XqBA
      Pz95rptrVjawYePGixaWSaXQGo0oWRh9gNnAPxnn9JCXnz/3BiatikwqQ1OlnVXLauhoraG5
      Qc6eMVskT/cz9sNfIAG199+DZU37ZZdZtA+gt9dgVxwiLVyaV683Lv7dJMvtFso3WM73K0RR
      YswTom/QzdMvHME95sNi0NLWXM3ytjraljdgMhnm2eorm8TJXsb/6WcotFrqHvwCpvaZy1FV
      tAV47pknKKusIxBOcvvNN0yr4MXaAlwKqVSG/v4xhgfGGOobIRNPUlPjpKWtnpblTVQ1XHz3
      QhlIHDuF518fQWkwUPWl38DY2jjjdRRtAUJ+D+m8gsmUvEPMdDAa9axdu4y1axJ919MAABU2
      SURBVN9sJUT8EwFGzrp4ddc+wuNe9Do1TcubqFlWT/3KVnRGuZWAqTid+GtH8f38cXR1NdT/
      6YPo6qpnrT55PcA8kUmlGe8bxtM7hK9vmHw8TnlDNVVtTVStaMXeUDPfJs4pkigS3b2fwC9+
      hXH1Ssq/+Fk0jtmfQCwqgHzcz8nRBFd1TG+HSJAFMF0kUWTS7cN3up9g7wCJUTc6nYbKjjZK
      25pxrGpHPYPbgy4UJFEk9vI+gv/+BMZ1q3D85mfRlNrnrP6iAsjFQzz262cpq27gthvljbLn
      mnwyRejMAJEzZ4n19iPG4pQ01mJb2YZt1QoMdVduKyHl80Sf303kmecxbdqA/a47UZdY59yO
      on0AIRMmJhlZWbL4R3cWIhqTkcqNa6jcuAaYelumRt3Ees7gfvRJ8q5RtEYD1tUrMS5fhq6l
      CQWgKlu4sUdiJkP0qWeJv/gK5hu3U//tr6Ocx/5P0RZAErI8/9yLWMpr2bpp/bQKlluAuUGI
      J0if6SNz4iSZV/dDOo26cmouQqFUoNBqUej1KAx6FHo9Sp1u6rNeh0KnQ2kwoNBpURgMU5/f
      /M1gOHfuuWMuMzmamMkQe+Ip4i+9guX2m7F+7HaUl7iTvMfjRq2ala7qRbZJnXQTzoA6Le/7
      tVBRWcyYN23AvGkD4ufvRkqnUdmnfGhJFJFyOaRMFimdRspkEbOZqc+ZDGI6g5TNIKbSSKEw
      UjaLeO43KZ0+f66YSiEVLhwPplAqpgSl070lFq0WhXFKUAqViuyp0xSCYUy33Uztj783bTGp
      1Wqcjtlxj4oK4HDXCZQFcVYqlrl8Tp06RSAQYMeOHYRCITo7O2lra2Ooq4tVq1YxPDxMeXk5
      zc3NMEubU0uiOCWoc8IS3xTOOcEJkSgKo5HK7/2Py25F3mRgYJDW1noGBiZobW2Y+rKQJZYF
      v2ec1tb3TpSdPtPHyhXLkfIJXjnUx4e2bSAWixUXwPpVK2gxthCb6J8Rw2Vmlvb2dsbGxhBF
      kZMnT7Jt2zb279+PSqWir6+PoaGhWXdDFUolCqMBivjx5ls/MqN1JhIJQCSRSLFv7ysoJR2b
      trQxOpZhsO8MJquVkb4BRK2ehgor4XiOTH6qBXMNjVNZaiCRlxh3TxQXgGt0nJOjp6lrlLdH
      Woi89tprXHvttahUKjZs2MCePXvQ6XRcddVV7Nmzh9bWVrxeLx0dHXNm0+joKD09PTQ1NVFX
      V8eRI0fw+XzYbDbKy8sJh8P4/X4+/vGPY/yAoTMSIBVyoNTiqKimRIQsoNToaWioo6pUx7F4
      DkeFmclEjtWrV3Dm3F7XgfAkRpORgQEXWi6SFaKlqRZPMErIP/GBDJWZXaxWK93d3fj9fhQK
      BVVVVVx77bWcPn2aj33sY5SXl7N+/fQGLy6XN1e/NTc3YzKZcDgc3HTTTYyOjtLX14fJZEKp
      VBIMBj9wHU6bhe4eFytWNuN0lGF1lqFTGXHajTjsVjyTAu3LKjGajLTWV3DyVC9GixWQqG9p
      pWPNWirtBpwOR/FRIDEb4+ixM0TzEjdtu2ZaRsqjQEuTvXv3IkkSHR0daLVahoeHWb9+PXv3
      7iWXy9HU1MTAwAA333wzyktctBII+GatEzxj4dDxSBC3J0Bt8zLMOrUsAJkZYzYFUDwcurSe
      5tJe0uLFw6FN1lIcmTjxWAZDqQFBECgUCjNmqMzSRRRF3v2e9nr9OKwaRsIFqk0gmBxYtO/a
      fT4bx5tSoY6GMDbWcaEeR1EB7H9lD2qdnkw6fVEjQz43gsZOlWNqGaRKpTqf20dG5nJQKpUo
      FO98uH1+P6mYjrQII5E8NdUSx8YDlDnKURWSeIIJmsqUHO5PsMppwnWmD7NGj44skViKttZa
      Dp10Fe8Ee8ZdpPPiJS3s1mh1REM+4qns5V2tjMwloFEoyEigVYCkVDDiGkOnVhEKhojF4qR8
      AbSlduqbW9BrNLStbEcqpBkfn0CrEvBMBLBXNRYXwLYbbiLiGeTlfa9d1CBbWTnLly/HYrxw
      /hUZmZmkudpOUtBSYzeSU5tobqgjL4iUVzgpFArozSbUJjv5wCiSVo8aMBqN1NXVIGlMVDjt
      lFqNxTvBvadP0bisHb1m+q6M3AmWmSlmsxNctAVoX7kKvUbN+Pj4rFQuIzPfFBWAkM/gcrkI
      h8Nk5ZggmUWFwKlTvcUFkAsNc2okyOBAP6+99vpcWSYjM+uEx12EE5niAtDa69BmglTUtbBi
      mRwPJLN4GJ4IYNfligtAkiTUGiUul4vKKjnhk8xiQaLUWcnq9Zsu0gco5MgVFFy35dq5skxG
      Zg5Q0NQ0tY6g6PjmsWPHSPiH6DxTQn11+ZyYJiPzbhQKJYHA5KyUXVQASqUKjUYNqoWS8Fxm
      KeJwOGet7EtKjJXP59FMczmbPBEmcyVwSQHZl/LwS0Ke0TH3ZRskIzOXzNj2ikODg9hMClye
      2EwVKSMz68zc/qJKDRaLCSEnR4PKXDnMmACqK0rp6fdQVzd7HRYZmZlGzg4ts6SRt1iXWdLM
      6ZpFSZJ44YUXsNlsXHPNNQwPDzM8PMzy5cs5ffo0NpuNs2fPctddd3H8+HFCoRDmqja6BybY
      sroRm8VIiUmPzWJEqVRcvEIZmYswpwLI5XI4HA6y2amOclNTEy6Xi5qaGlwuF2vXrqVQKCBJ
      Ek6nk8HBQXROAX84xsETw0wmUsQSGSbjKd7uuJkMWkpMBkpL3hKIzWLAbjHIopEpypwKQKPR
      MDQ0RElJCX6/n0gkwvHjx1m3bt35DBJdXV1otVrS6TSCIHDDhmV8aGNb0XITqSzRZIZwLHle
      IBOBKKeHvLJoZIqyZDvBFxJNJJ4mEk9fkmj6XD7++N4baZVHva5oigogGwuw/+gpjAYj6zZs
      wKidajD8nnEsZZUYtGoksUA8mUWnEhkZm6CusRWjTrXgBfBBeLtoXnj9DL1DHv5y523UVS7c
      DSlkilPcBVIoyGXS2OwOzvb2sm7NKsRUkEhOS3h4kPblywkGggQiUdRCDrXRhkG3eAPnzEYd
      ZqOOGmcJq1uqcXlC/NWPnuELH7uW664q7qbJLEyKCkAhZnG5faQKCj79sVsBEAtZtMZShEIc
      AGdFJZOxGMvaVpFLeOkfDtJSb7/iMsMdPXoUr9fLVVddRWVlJQ899BD33Xcf//Vf/0VzczPh
      cJhAIHB+9MpoNLJp0yb+/k8+w7f+5VlOnhnhtz9zw3sSOMksbIoLAAUdK1cSS721Q4zaWo1w
      thdLWTXxeJxkLEwqmcLv9xMKTdK8rB2VSnnFZYYTBIFbb72V7u5u6uvr2bBhA2q1mpaWFvr7
      +2loaCAcDqNUKhEEgY6ODtRqNWa1mq/9t0/xxLOH+H//+Dh/8sDHsZjlPdWuFIo+ofsOHCKW
      BZ3V8bZvFbS0rTj/yWKxUFkztbqmoqJiVoycC5xOJy+++CJbtmzB7/czODiIXq8nnU5jt9tx
      OBxEIhECgQAqlYp0Ok1JyVu7rnzqtmtoa6rkL7/+c35v5500NshLSK8EiqdHzyV45uXXuWp1
      O3V1ddMqeDF2gi+FYCjKd77/K27csZ4d26+ab3NkLkLxtCiJICOjoxzuPDFX9lzxOMpK+N9/
      8Zv0nx3jX3/8awr5K6cftBQpKoBkXsXyhmq2bN02V/YsCjRqNffffydty+r41l//hHAoMt8m
      ybwPRQVw/FQvN938EfpOHpsrexYV23Zs4O4v3MYPv/kw/WeG5tscmQtQVADx4ARP/fop/NHk
      XNmz6GhsruX3/+J3ePGJPex+au98myPzLop2ggvZFHmFDoN2+pNbS7UT/H6IosizjzxH2Bvk
      sw/cjc4gp5FfCBRtARRIHDmwm5/8288YcvvnyqZFiVKp5I57b2fD9Rv41//7Q4ITgfk2SYaL
      CKCQS5MRNdx19z0YlW+OZkgMnj2DPxQFID4ZZNwbIB2f5NTpXvJyEumidFy9irt+93M88Z2H
      OXv01Hybs+Qp6gKdOvA0g9lypHSEj99xCwCFmJvxbClCbIKWlhYymQyjY6OoFCqaGxwMT+Ro
      qC0lHo9jNpvn7EKuNHKZLM98799xVpez7XO3yyEU80TxWAWNEeIJaurqz3+lVOvITcYRz8X5
      6PX6qR/EPPF4EpXWjEqluuJCIeYatVnNZ/98J0eeepmnvv7P3P4H92GwmObbrCVHURfIWV6B
      paSMSudb4b5KowObNkdDUwvxeByv24UkStQ2thBJSjRUzc5WNouVTXd+mM2f/Ai//tp3CAyP
      zbc5S46iLlAuHuKRJ3dR3djGTdunlyFaHgWaHvFgmBe/+WM6btpK+4evm29zlgwXzQpRVlZG
      MinPA8w2FkcpH/+rP8LfO8CB7/8MURDm26QlwSWlRclmMxc/SOayUWnUXP+7v0lFewsv/cU3
      SAZC823Soqe4CxR14y+UkYu6aW6e3hZJsgt0eYT6h3njuz9hw5fuxbmqfb7NWbQUbQFUWiNd
      r7/C8Jg8CTbXlC1r4oa//lN6H32a/iefnW9zFi3FZ4JVGiSlmrbm2rmyR+Zt6Kxmtv7fPyYf
      jdH5N9+hkE7Pt0lFCYfDDA1NBf1JkkRnZyeSJJFKTa0Y7O3tpbOzk0gkwokTCyPEXl4PsMBR
      KJWsvO9uandsofPP/5qU2zPfJr0vXV1duFwuCoUChw8fprq6msOHD3P48GF6eno4fPgw5eXl
      HDx4kFgsRiQy/2HiRQUQyen52PaNVNRMbzWYzMxTseVqVv3RA5z+u+8SPtI13+ZcEL1ej9Fo
      RJIkBEGgvLyc8fFxAoEAQ0NDfP7zn+fEiRMYjUZisdj5DIHzSdFO8L5XXiSegUqHjY1Xbzr3
      rcTguUXx5WUlBL1uImkBp1WPJzhJ/SLOC7QQENJpzn7z+xhrqqi/73MolAsnv3Fvby+RSITW
      1lZ0Oh0HDhxg27ZtmM1mRkZGcLvdaDQaLBYLbreb7du3T3vrrZmmqAA8o0Po7VVI+TSlpVOz
      we+OBRocGEQPJFUSQjpH47J2tEpJjgWaZTyPP0X6ZA+N//33UMr3+QNTNFinqr4ZgJ6ewfMC
      eHcsUL6QB8BRXo1RkWRsPMyyJoccCzTL1N3zKeIrl+P6n39F7R88iKGlad5skUQRKZlCiMWQ
      UimESBQxkUSMRhGCITKdx7B9+XfQre5YUC0WXKQFEDJRnn9pPyISazZuoaGqDHgrNWIhm0aj
      lIikBMosOsa8IZoa61AgzwPMFXl/gPG/+gald9xCyUduvKyyxFQaMRZDTKUQI1HERAIxFkeM
      xxFi8XOfY4ixOFK+AJIICiUKpQKFyYTSYkFpMqKylaA0m1GWlKDQ68j1DyKEJ8kODKGqrMB4
      7WaMmzeiKpn/uLGiAkj7ejkWMFEID2M06N/WD7g4sgDmDimfx/+dH6BEouSTd6IqKUGIRs+/
      ld98iMU3H+J4AjEaRXxzWFUx9VZWGg3nH2JlSQlKi3nqs9WCymqdeqitFpRmMwqd9gPZmhsZ
      JXn4KMmDh5EEEf26VVi2b0XfNr2J1pmi+ExwIsSul/azftO1OEpMWKbha8oCmHtCf/8dMke7
      0La1ojz3wKqslvMP8ZvfKc2mqb+Nhnm1V8xkSB7uJP7aG6ROnkHfvgzzlk1YtlyNao5su0h6
      dIkje5/jwBk/f/iVL06rYFkAc48kiki5HMo312hcYWQGR4jufY344S4kCazXbcK6dROG1sZZ
      q7N4evREiP7xMIgCq1ZOLx5FFsDscujQIWw2G+3t7YyMjDAyMsLKlSs5ceIEa9asobu7m6uu
      uoru7m62bdt2xQ1ICIkk0QNHiOw7RMblxtDWjG3HtVg3r0dlmDmBF70ru57ZhZiN0XL9vTNW
      oczlk8/nUSgUBINBAMbHx6mrqyOXy5HJZBgaGkIQBCRJolAoIAjCFScAldlE6S03UHrLDUii
      SOrMAOHdB3H/5JcotFrs26+h9IZr0NdWXVY9Re/KNddu4cSJY3hc/dC8+bIqkpk5FAoFqVQK
      4dyagUwmw+TkJGVlZVRUVKBWq7nuuut44403FsVcjEKpxNTRhqmjjTogF5xkcv8Rhv7un8lM
      +LGsXUHZjVuwXb0GpXZ6E2tLdoukK52hoSFsNhuFQgGTyYTL5aK+vp6zZ8/S0dFBV1cX69ev
      59ChQ5SWlrJmzZr5NnlWkESRyBvdhPcfJbT/KNpyB2U7NuO88Vr0lY6Lni8LQGZRkfWH8L9w
      gOCrR0lN+Cm7bgPOHZuwb1qF8gJu4LQFIOUTHD0xgKXESvuyZs6ePkk0JVDpsBCNRXHWr6TC
      ppcFIDPviLk84cPd+F56jfDRHnRV5VTdshXn9RvQV5RRKBSmL4B82IVHUUN+0kVLcwtDg0OY
      AD+wurmCoaE4DY1OYrEYOt1U+j+VSnXeX5X/nt2/c7kcWq12Qdiy0P6ODY7i232YyP7jRE4O
      UPnZmz6ACyTmOXXqDJZSJ6UlZiaDPiIpgVqHmQlfiPq2Dqx6ORpUZmHje+UNjLUVch9AZmnz
      nl5BPB6fkYJTqdSMlCMjM5u8RwAz+daWWwCZhYqQyaLS6y6SG1RGZhEiFgrs/tD91Nxx/aUl
      xpKRWSwkRty8+rHfo/4zH6Hx3ttlAVwKkiTx8ssvI0kSr776Kt3d3QD09PSwa9cuQqEQu3fv
      JhwOz7OlMsVwP7OXozv/D1d9+7/T/vu/gb62XHaBLoVcLocgCIiiiMfjIZlMsmbNGjo6OggG
      gxw7NrWJ4ELIciDzXoRMlp6v/YBCIsW2p7+HSv/W/NRlC8DrdjE66qe8qpTE22aCFxM6nQ6d
      Tkc+n8dut59/0BOJBEajkUKhQHNzM729vVRVXV50oszMkhgc5cQf/B11n7uD+rtvfc/vlz0P
      EAsH8Ewm0SDS/LaZ4MWUFSIej9PV1UV1dTWFQgGbzYZarUan02GxWFAoFHR2drJ27dorLux4
      MTPx5MuM/fxpVn3zjzG11l/wmMsWwKkTnWj0NkptenxLaCY4XxDQqKe/e6bM7COkMpz6s2+h
      MuhZ8X++et7luRDFV4TFAvSMTrK+o43pbmG1mARQEES8oRguT5hxf4Rxf4THdx/jszeu4yOb
      21nRXI1SKe/xtRBInB3m1B/9LU0P3EvFrddf9PjiLYAkcWjPLo6c9bF9xw7Wrmi9ZEOuNAGk
      s3kmAlFc3jAuT5iJYJSJQJREOodGraTGWUJdhZ3acht1FXbCsRSiIHD4xCCuMT/lJUY2rW7m
      6nWtOMpK5vtyliTuR3cx8cSLrPqHP8dQd2l9sf8PY0KRo1Q2VmcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Average Arrival &amp; Departure Delays (minutes)' width='192'>
      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
      WoWrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrdTlB
      hvPSTCtnOeWPEN3qsiXSZG11hVLNJB7SqNQNZheuEw97T7o+IU5V1w0xsYEwnqCOZdS5enmS
      g2KFSCAmLZEvkJbIY/RjS2TbqPDjyhbTsxfRaPHT8iYXP7guLZEdSEvkMfqxJVL3R/jss386
      6VqE6Dl5F0i4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLia
      BEC4mgRAuJoEQLhaV/0Ajm3x+P7XhC7dwUyvUK4ZzH5wnXhIWiJFf+luiiRV48LsNAcO2Kqf
      qx/83BLpl5bIF0lL5DH6sSXSNlusb2xT9NlMBNr8tLzJBWmJ7EhaIo/Rjy2RqsfLP/zjZydd
      ixA9JxfBwtUkAMLVJADC1SQAwtUkAMLVJADC1SQAwtUkAMLVJADC1SQAwtUkAMLV3joAZssg
      nc2fRC1C9NxbB2B9bZ1mJcNBoXES9QjRU28dANXjZWRkmFZDAiD6z1sHIORXWV7fZWg4dhL1
      CNFTXU6T+tTk9CUmp0+iFCF6T3Gck+nHcxwH27bJ5/P4fL6j5bbtUKoZJ7GJXyQS8qGpTw9s
      tm2jPvMzjoNdz735ih0HuujcUvwRFO1pr3Sz2Xyp46lmtGi1e9M66vVohAJP63EcB8dxnhsj
      p1XHadfffOVdjJGi6Sj+6HPLarUaoVDo6GfLdiif0j50YgF4olwuE4lETnKVb+WlAJyxer2O
      ruvoun7WpQCdA3DWerkPndqrNps1yrXm6x/kWOQLpZcW12q1jg+v15/+VTIMgyfJtVoNmmbn
      HD/5jy2XCpjW67Jus5vYIlsov77mN9RuNTGtTn3IDoVCgeP+/FTLRVrm8893bJta/eU3HZpG
      naebsjCM9tHvnh27ZymKcjhGtkm++PrXXq8U2dhMYNon28RvGJ3/ujtWi0KpeuzzC4WX34Zv
      1Gp0OqbWnxm3VtNA+/3vf//7X1roL9FsNvH5fGxublEsl/CpKprXS6lcYm87Qa1pEx04PLxV
      cvssru1wbnKM1M4mjaZJLpvHVqDdbKKrUK5W2drcQg8OsLuzxfDQMKlkguW1BPFIgM3ELrpZ
      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
    </thumbnail>
    <thumbnail height='192' name='Average Delays Per Carrier' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delays Dashboard' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 5 States By Delays (minutes)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Delays Per Carrier (minutes)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
